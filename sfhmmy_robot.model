AMQPBroker => {
  ip = "155.207.33.185";
  port = "5672";
  username = 'robot_1';
  password = 'r0b0t1';
  vhost = '/sfhmmy';
  namespace = 'robot_1';

  section #topics
    AMQPTopic SonarFrontAMQPTopic => {
      exchange = 'amq.topic';
      uri = 'sensor.range.sonar.front';
    }

    AMQPTopic MotionBaseMotorsAMQPTopic => {
      exchange = 'amq.topic';
      uri = 'effector.motion.base.motors';
    }

    AMQPTopic PoseUpdateAMQPTopic => {
      exchange = 'amq.topic';
      uri = 'pose_update';
    }

  endsection

  section #rpc
    AMQPRPC SetPathAMQPRPC => {
      exchange = '';
      uri = 'set_path';
    }

    AMQPRPC ImmobilizeAMQPRPC => {
      exchange = '';
      uri = 'immobilize';
    }

    AMQPRPC RobotReadyAMQPRPC => {
      exchange = '';
      uri = 'ready';
    }

  endsection
}

ROSSystem => {
  section #publishers
    ROSPublisher SonarFrontROSPub => {
      topic = SonarFrontROSTopic;
    }

    ROSPublisher PoseUpdateROSPub => {
      topic = PoseUpdateROSTopic;
    }
  endsection

  section #subscribers
    ROSSubscriber MotionBaseMotorsROSSub => {
      topic = MotionBaseMotorsROSTopic;
    }
  endsection

  section #topics
    ROSTopic SonarFrontROSTopic => {
      uri = '/sensor/range/sonar/front';
      msgType = 'sensor_msgs/Range';
    }

    ROSTopic MotionBaseMotorsROSTopic => {
      uri = '/effector/motion/base/motors';
      msgType = 'robot_communication/Motors';
    }

    ROSTopic PoseUpdateROSTopic => {
      uri = '/behaviour/control/motion/base/pose_update';
      msgType = 'robot_communication/PoseUpdate';
    } 
  endsection

  section #services
    ROSService SetPathROSService => {
      uri = '/behaviour/control/motion/base/set_path';
      srvType = 'robot_communication/SetPath';
    }

    ROSService ImmobilizeROSService => {
      uri = '/behaviour/control/motion/base/immobilize';
      srvType = 'robot_communication/Immobilize';
    }

    ROSService RobotReadyROSService => {
      uri = '/behaviour/control/motion/base/ready';
      srvType = 'robot_communication/RobotReady';
    }

  endsection
}

ROSPubConnector PoseUpdateConnector PoseUpdateROSPub -> PoseUpdateAMQPTopic;
ROSServiceConnector SetPathConnector SetPathROSService -> SetPathAMQPRPC;
ROSServiceConnector ImmobilizeConnector ImmobilizeROSService -> ImmobilizeAMQPRPC;
ROSServiceConnector RobotReadyConnector RobotReadyROSService -> RobotReadyAMQPRPC;
